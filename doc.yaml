swagger: '2.0'
info:
  title: Gestion des Transactions API
  version: '1.0'
  description: API pour gérer les transactions financières
securityDefinitions:
  bearerAuth:
    type: apiKey
    name: Authorization
    in: header
    description: Utilisez le format "Bearer <token>"

paths:
  /transactions:
    get:
      summary: Récupérer toutes les transactions du mois en cours groupées par compte
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
          description: Token JWT au format "Bearer <token>"
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Liste des transactions réussie
          schema:
            type: array
            items:
              $ref: '#/definitions/Transaction'
          examples:
            application/json:
              - id: 1
                account_id: 123
                amount: 100.0
                date: '2024-01-08'
              - id: 2
                account_id: 456
                amount: 50.0
                date: '2024-01-08'
        '401':
          description: Non autorisé (Token manquant ou invalide)
          schema:
            $ref: '#/definitions/ErrorUnauthorized'
        '500':
          description: Erreur interne du serveur
          schema:
            $ref: '#/definitions/ErrorInternalServerError'

  /transactions/{transactionId}:
    get:
      summary: Récupérer les détails d'une transaction spécifique
      parameters:
        - name: transactionId
          in: path
          required: true
          type: integer
          description: ID de la transaction à récupérer
     
        - name: Authorization
          in: header
          required: true
          type: string
          description: Token JWT au format "Bearer <token>"
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Détails de la transaction récupérés avec succès
          schema:
            $ref: '#/definitions/Transaction'
          examples:
            application/json:
              id: 1
              account_id: 123
              amount: 100.0
              date: '2024-01-08'
        '401':
          description: Non autorisé (Token manquant ou invalide)
          schema:
            $ref: '#/definitions/ErrorUnauthorized'
        '404':
          description: Transaction non trouvée
          schema:
            $ref: '#/definitions/ErrorNotFound'
        '500':
          description: Erreur interne du serveur
          schema:
            $ref: '#/definitions/ErrorInternalServerError'

    put:
      summary: Modifier les détails d'une transaction spécifique
      parameters:
        - name: transactionId
          in: path
          required: true
          type: integer
          description: ID de la transaction à modifier
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/Transaction'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Transaction modifiée avec succès
          
        '401':
          description: Non autorisé (Token manquant ou invalide)
          schema:
            $ref: '#/definitions/ErrorUnauthorized'
        '404':
          description: Transaction non trouvée
          schema:
            $ref: '#/definitions/ErrorNotFound'
        '500':
          description: Erreur interne du serveur
          
          schema:
            $ref: '#/definitions/ErrorInternalServerError'
          
  

   
definitions:
  
  Transaction:
    type: object
    properties:
      id:
        type: integer
      account_id:
        type: integer
      amount:
        type: number
      

  ErrorUnauthorized:
    type: object
    properties:
      error:
        type: object
        properties:
          code:
            type: integer
          message:
            type: string
    example:
      error:
        code: 401
        message: "Non autorisé. Veuillez fournir un token valide dans l'en-tête Authorization."

  ErrorNotFound:
    type: object
    properties:
      error:
        type: object
        properties:
          code:
            type: integer
          message:
            type: string
    example:
      error:
        code: 404
        message: "La transaction spécifiée n'a pas été trouvée."

  ErrorInternalServerError:
    type: object
    properties:
      error:
        type: object
        properties:
          code:
            type: integer
          message:
            type: string
    example:
      error:
        code: 500
        message: "Une erreur interne du serveur s'est produite. Veuillez réessayer ultérieurement."
